name: deb package

# Only run this workflow when the push is an annotated tag starting v
on:
  push:
    tags:
      - 'v*'

jobs:
  # This is used to identify the output in other jobs
  Create_Package:
    name: Create deb package
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        path: "REPO"

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build
      run: |
        cd REPO
        go build -v -o usr/bin/time_warden ./...

    - name: Build package
      run: |
        mkdir -p PKG_SOURCE
        cp -Rf REPO/usr REPO/etc REPO/DEBIAN PKG_SOURCE
        dpkg-deb --build PKG_SOURCE time_warden_${{  github.ref_name }}.deb

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./time_warden_${{  github.ref_name }}.deb
        asset_name: time_warden_${{  github.ref_name }}.deb
        asset_content_type: application/octet-stream
